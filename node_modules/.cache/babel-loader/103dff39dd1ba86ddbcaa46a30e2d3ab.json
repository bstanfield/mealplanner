{"ast":null,"code":"import _classCallCheck from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zakkary/Desktop/mealplanner/src/components/Survey.js\";\nimport React, { Component } from 'react';\nimport * as R from 'ramda';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nvar Survey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Survey, _Component);\n\n  function Survey(props) {\n    var _this;\n\n    _classCallCheck(this, Survey);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Survey).call(this, props));\n\n    _this.updateIndex = function () {\n      var newIndex = _this.state.index + 1;\n\n      _this.setState({\n        index: newIndex\n      });\n    };\n\n    _this.renderSurveyQuestion = function (question) {\n      return React.createElement(\"div\", {\n        className: \"questionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, _this.state.index + 1, \"/ \", question.q), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, question.desc), _this.state.index + 1 === _this.state.questions.length ? React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this.setState({\n            isComplete: true\n          });\n        },\n        className: \"btn fit-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Submit!\") : React.createElement(\"div\", {\n        onClick: _this.updateIndex,\n        className: \"btn fit-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Next question\"));\n    };\n\n    _this.state = {\n      questions: [{\n        q: 'Do you have any dietary preferences?',\n        desc: 'This is the subtext of the question'\n      }, {\n        q: 'What is another question?',\n        desc: 'Idk I am tired of making fake content'\n      }],\n      index: 0,\n      isComplete: false\n    };\n    return _this;\n  }\n\n  _createClass(Survey, [{\n    key: \"render\",\n    value: function render() {\n      var isComplete = this.state.isComplete;\n\n      if (isComplete) {\n        return React.createElement(Redirect, {\n          exact: true,\n          to: \"/recipe-page\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Please fill out this survey as best you can.\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"We will recommend a recipe based on the preferences you enter.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), this.renderSurveyQuestion(this.state.questions[this.state.index]));\n    }\n  }]);\n\n  return Survey;\n}(Component);\n\nexport default Survey;","map":{"version":3,"sources":["/Users/zakkary/Desktop/mealplanner/src/components/Survey.js"],"names":["React","Component","R","FontAwesomeIcon","Route","Switch","Redirect","Survey","props","updateIndex","newIndex","state","index","setState","renderSurveyQuestion","question","q","desc","questions","length","isComplete"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UAkBnBC,WAlBmB,GAkBL,YAAM;AAClB,UAAMC,QAAQ,GAAG,MAAKC,KAAL,CAAWC,KAAX,GAAmB,CAApC;;AACA,YAAKC,QAAL,CACE;AAAED,QAAAA,KAAK,EAAEF;AAAT,OADF;AAGD,KAvBkB;;AAAA,UAyBnBI,oBAzBmB,GAyBI,UAACC,QAAD;AAAA,aACrB;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,MAAKJ,KAAL,CAAWC,KAAX,GAAmB,CAAxB,QAA6BG,QAAQ,CAACC,CAAtC,CADF,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,QAAQ,CAACE,IAAb,CAFJ,EAIO,MAAKN,KAAL,CAAWC,KAAX,GAAmB,CAApB,KAA2B,MAAKD,KAAL,CAAWO,SAAX,CAAqBC,MAAhD,GACC;AAAK,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKN,QAAL,CAAc;AAAEO,YAAAA,UAAU,EAAE;AAAd,WAAd,CAAN;AAAA,SAAd;AAAyD,QAAA,SAAS,EAAC,iBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,GAEC;AAAK,QAAA,OAAO,EAAG,MAAKX,WAApB;AAAkC,QAAA,SAAS,EAAC,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANP,CADqB;AAAA,KAzBJ;;AAEjB,UAAKE,KAAL,GAAa;AACXO,MAAAA,SAAS,EAAE,CACT;AACEF,QAAAA,CAAC,EAAE,sCADL;AAEEC,QAAAA,IAAI,EAAE;AAFR,OADS,EAKT;AACED,QAAAA,CAAC,EAAE,2BADL;AAEEC,QAAAA,IAAI,EAAE;AAFR,OALS,CADA;AAWXL,MAAAA,KAAK,EAAE,CAXI;AAYXQ,MAAAA,UAAU,EAAE;AAZD,KAAb;AAFiB;AAgBlB;;;;6BAsBQ;AAAA,UACCA,UADD,GACgB,KAAKT,KADrB,CACCS,UADD;;AAGP,UAAIA,UAAJ,EAAgB;AACd,eACE,oBAAC,QAAD;AAAU,UAAA,KAAK,MAAf;AAAgB,UAAA,EAAE,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKI,KAAKN,oBAAL,CAA0B,KAAKH,KAAL,CAAWO,SAAX,CAAqB,KAAKP,KAAL,CAAWC,KAAhC,CAA1B,CALJ,CADF;AASD;;;;EAzDkBX,S;;AA4DrB,eAAeM,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as R from 'ramda';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nclass Survey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [\n        {\n          q: 'Do you have any dietary preferences?',\n          desc: 'This is the subtext of the question'\n        },\n        {\n          q: 'What is another question?',\n          desc: 'Idk I am tired of making fake content'\n        },\n      ],\n      index: 0,\n      isComplete: false,\n    };\n  }\n\n  updateIndex = () => {\n    const newIndex = this.state.index + 1;\n    this.setState(\n      { index: newIndex }\n    )\n  }\n  \n  renderSurveyQuestion = (question) => (\n    <div className=\"questionBox\">\n      <h1>{this.state.index + 1}/ {question.q}</h1>\n        <p>{question.desc}</p>\n        { \n          (this.state.index + 1) === this.state.questions.length ? \n          (<div onClick={() => this.setState({ isComplete: true })} className=\"btn fit-content\">Submit!</div>) : \n          (<div onClick={ this.updateIndex } className=\"btn fit-content\">Next question</div>) \n        }\n        \n    </div>\n  )\n\n  render() {\n    const { isComplete } = this.state;\n\n    if (isComplete) {\n      return (\n        <Redirect exact to=\"/recipe-page\" />\n      )\n    }\n\n    return(\n      <div>\n        <h1>Please fill out this survey as best you can.</h1>\n        <h2>We will recommend a recipe based on the preferences you enter.</h2>\n        <br/>\n        <br/>\n        { this.renderSurveyQuestion(this.state.questions[this.state.index]) }\n      </div>\n    )\n  }\n}\n\nexport default Survey;"]},"metadata":{},"sourceType":"module"}