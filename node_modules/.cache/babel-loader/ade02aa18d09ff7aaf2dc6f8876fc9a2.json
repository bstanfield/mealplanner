{"ast":null,"code":"import _objectSpread from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zakkary/Desktop/mealplanner/src/components/Survey.js\";\nimport React, { Component } from 'react';\nimport * as R from 'ramda';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport ReactGA from 'react-ga';\nexport var initGA = function initGA() {\n  console.log('GA init');\n  ReactGA.initialize('UA-137386963-1');\n};\nexport var logPageView = function logPageView() {\n  ReactGA.set({\n    page: window.location.pathname\n  });\n  ReactGA.pageview(window.location.pathname);\n};\n\nvar Survey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Survey, _Component);\n\n  function Survey(props) {\n    var _this;\n\n    _classCallCheck(this, Survey);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Survey).call(this, props));\n\n    _this.updateIndex = function () {\n      var newIndex = _this.state.index + 1;\n\n      _this.setState({\n        index: newIndex\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var questionsClone = _objectSpread({}, _this.state.questions);\n\n      questionsClone[_this.state.index].answer = event.target.value;\n\n      _this.setState({\n        questionsClone: questionsClone\n      });\n\n      console.log(\"questionsClone\", questionsClone);\n    };\n\n    _this.renderSurveyQuestion = function (question) {\n      return React.createElement(\"div\", {\n        className: \"questionrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"questioncolumn qc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, question.q), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, question.desc)), React.createElement(\"div\", {\n        className: \"questioncolumn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, question.options.map(function (option) {\n        return React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          name: _this.state.index,\n          value: option.value,\n          key: option.value,\n          onChange: function onChange(e) {\n            return _this.handleInputChange(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), \" \".concat(option.label), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }));\n      })), _this.state.index + 1 === _this.state.questions.length ? React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this.setState({\n            isComplete: true\n          });\n        },\n        className: \"btn fit-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Submit!\") : React.createElement(\"div\", {\n        onClick: _this.updateIndex,\n        className: \"btn fit-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Next question\")));\n    };\n\n    _this.state = {\n      questions: [{\n        q: 'How much money would you like to spend on a meal?',\n        desc: 'Estimate from your current cooking expenses or enter a price point you want to aim for.',\n        options: [{\n          value: 0,\n          label: '< $5'\n        }, {\n          value: 5,\n          label: '$5-10'\n        }, {\n          value: 10,\n          label: '$10-15'\n        }, {\n          value: 15,\n          label: '> $15'\n        }],\n        answer: ''\n      }, {\n        q: 'How much time do you spend cooking a meal?',\n        desc: 'Estimate how long a simple dinner takes to cook, or how much time you have available for cooking a meal in minutes.',\n        options: [{\n          value: 30,\n          label: 'Less than 30 minutes'\n        }, {\n          value: 60,\n          label: '30 minutes to an hour'\n        }, {\n          value: 120,\n          label: '1 to 2 hours'\n        }, {\n          value: 500,\n          label: 'Greater than 2 hours'\n        }],\n        answer: ''\n      }, {\n        q: 'Do you have any dietary preferences?',\n        desc: 'Vegetarian, Vegan, Gluten Free?',\n        options: [{\n          value: 1,\n          label: 'Vegan'\n        }, {\n          value: 2,\n          label: 'Vegetarian'\n        }, {\n          value: 0,\n          label: 'No dietary preferences'\n        }],\n        answer: ''\n      }],\n      index: 0,\n      isComplete: false,\n      error: ''\n    };\n    return _this;\n  }\n\n  _createClass(Survey, [{\n    key: \"render\",\n    value: function render() {\n      var isComplete = this.state.isComplete;\n\n      if (isComplete) {\n        var cost = this.state.questions[0].answer;\n        var cookTime = this.state.questions[1].answer;\n        var restriction = this.state.questions[2].answer;\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/surprise',\n            search: \"?source=survey&cost=\".concat(cost, \"&cookTime=\").concat(cookTime, \"&restriction=\").concat(restriction)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.error) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, this.state.error.message);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"surveycontainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"survey-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.renderSurveyQuestion(this.state.questions[this.state.index])));\n    }\n  }]);\n\n  return Survey;\n}(Component);\n\nexport default Survey;","map":{"version":3,"sources":["/Users/zakkary/Desktop/mealplanner/src/components/Survey.js"],"names":["React","Component","R","FontAwesomeIcon","Route","Switch","Redirect","ReactGA","initGA","console","log","initialize","logPageView","set","page","window","location","pathname","pageview","Survey","props","updateIndex","newIndex","state","index","setState","handleInputChange","event","questionsClone","questions","answer","target","value","renderSurveyQuestion","question","q","desc","options","map","option","e","label","length","isComplete","error","cost","cookTime","restriction","search","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as R from 'ramda';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport ReactGA from 'react-ga';\nexport const initGA = () => {\n    console.log('GA init');\n    ReactGA.initialize('UA-137386963-1');\n}\nexport const logPageView = () => {\n    ReactGA.set({ page: window.location.pathname })\n    ReactGA.pageview(window.location.pathname)\n}\n\nclass Survey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [\n        {\n          q: 'How much money would you like to spend on a meal?',\n          desc: 'Estimate from your current cooking expenses or enter a price point you want to aim for.',\n          options: [\n            {\n              value: 0,\n              label: '< $5'\n            },\n            {\n              value: 5,\n              label: '$5-10'\n            },\n            {\n              value: 10,\n              label: '$10-15'\n            },\n            {\n              value: 15,\n              label: '> $15'\n            }\n          ],\n          answer: '',\n        },\n        {\n          q: 'How much time do you spend cooking a meal?',\n          desc: 'Estimate how long a simple dinner takes to cook, or how much time you have available for cooking a meal in minutes.',\n          options: [\n            {\n              value: 30,\n              label: 'Less than 30 minutes'\n            },\n            {\n              value: 60,\n              label: '30 minutes to an hour'\n            },\n            {\n              value: 120,\n              label: '1 to 2 hours'\n            },\n            {\n              value: 500,\n              label: 'Greater than 2 hours'\n            }\n          ],\n          answer: '',\n        },\n        {\n          q: 'Do you have any dietary preferences?',\n          desc: 'Vegetarian, Vegan, Gluten Free?',\n          options: [\n            {\n              value: 1,\n              label: 'Vegan'\n            },\n            {\n              value: 2,\n              label: 'Vegetarian'\n            },\n            {\n              value: 0,\n              label: 'No dietary preferences'\n            }\n          ],\n          answer: '',\n        },\n      ],\n      index: 0,\n      isComplete: false,\n      error: '',\n    };\n  }\n\n  updateIndex = () => {\n    const newIndex = this.state.index + 1;\n    this.setState(\n      { index: newIndex }\n    )\n  }\n\n  handleInputChange = (event) => {\n    var questionsClone = {...this.state.questions};\n    questionsClone[this.state.index].answer = event.target.value;\n    this.setState({questionsClone});\n    console.log(\"questionsClone\", questionsClone)\n  }\n\n\n  renderSurveyQuestion = (question) => (\n    <div className=\"questionrow\">\n      <div className=\"questioncolumn qc\">\n      <h3>{question.q}</h3>\n        <p>{question.desc}</p>\n      </div>\n      <div className=\"questioncolumn\">\n        <form>\n         {question.options.map((option) => (\n            <label>\n            <input\n              type=\"radio\"\n              name={this.state.index}\n              value={option.value}\n              key={option.value}\n              onChange={(e) => this.handleInputChange(e)}\n            />\n            {` ${option.label}`}\n            <br /><br />\n          </label>\n          )\n          )}\n        </form>\n        {\n          (this.state.index + 1) === this.state.questions.length\n          ? (\n            <div onClick={() => this.setState({ isComplete: true })} className=\"btn fit-content\">\n              Submit!\n            </div>\n            )\n          : (\n            <div onClick={ this.updateIndex } className=\"btn fit-content\">\n              Next question\n            </div>\n            )\n        }\n        </div>\n\n        </div>\n\n\n        \n\n    \n  )\n\n  render() {\n    const { isComplete } = this.state;\n\n    if (isComplete) {\n      let cost = this.state.questions[0].answer\n      let cookTime = this.state.questions[1].answer\n      let restriction = this.state.questions[2].answer\n      return (\n        <Redirect to={{\n          pathname: '/surprise',\n          search: `?source=survey&cost=${cost}&cookTime=${cookTime}&restriction=${restriction}`\n        }} />\n      );\n    }\n\n\n    if (this.state.error) {\n      return <p>{this.state.error.message}</p>;\n    }\n\n    return(\n      <div className=\"surveycontainer\">\n      <div className=\"survey-header\">\n       { this.renderSurveyQuestion(this.state.questions[this.state.index]) } \n      </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Survey;\n"]},"metadata":{},"sourceType":"module"}