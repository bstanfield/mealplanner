{"ast":null,"code":"import _classCallCheck from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zakkary/Desktop/mealplanner/src/components/RecipePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as R from 'ramda';\nimport { SetRecipePage, SetRecipeIngredients, SetUpvotes } from '../actions';\nimport ReactGA from 'react-ga';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhone } from '@fortawesome/free-solid-svg-icons';\n\nvar ReactMarkdown = require('react-markdown/with-html');\n\nvar queryString = require('query-string');\n\nexport var initGA = function initGA() {\n  console.log('GA init');\n  ReactGA.initialize('UA-137386963-1');\n};\nexport var logPageView = function logPageView() {\n  ReactGA.set({\n    page: window.location.pathname\n  });\n  ReactGA.pageview(window.location.pathname);\n};\n\nvar renderRecipeInstructions = function renderRecipeInstructions(instruction, index) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"steps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" Step \", index + 1, \".\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, instruction));\n};\n\nvar renderRecipeIngredients = function renderRecipeIngredients(ingredientObj) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    value: ingredientObj.ingredient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), \"\".concat(R.isNil(ingredientObj.quantity) ? '' : parseFloat(ingredientObj.quantity.toString()), \" \").concat(ingredientObj.measurement, \" \").concat(ingredientObj.technique || '', \" \").concat(ingredientObj.ingredient));\n};\n\nvar RecipePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecipePage, _Component);\n\n  function RecipePage(props) {\n    var _this;\n\n    _classCallCheck(this, RecipePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecipePage).call(this, props));\n\n    _this.renderRecipeIngredients = function (ingredientObj) {\n      return (// TODO: Add functionality so the quantity takes into account the \"number of servings input\"\n        React.createElement(\"div\", {\n          className: \"ingredientservings\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          value: ingredientObj.ingredient,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), \"\".concat(R.isNil(ingredientObj.quantity) ? '' : parseFloat(_this.state.servings * ingredientObj.quantity.toString()), \" \").concat(ingredientObj.measurement, \" \").concat(ingredientObj.technique || '', \" \").concat(ingredientObj.ingredient))\n      );\n    };\n\n    _this.state = {\n      servings: 1,\n      phoneNumber: '',\n      favorited: false\n    };\n    return _this;\n  }\n\n  _createClass(RecipePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Setting a default recipe to load if the recipe-page is accessed directly\n      // Could use R.defaultTo\n      var recipeName = 'Easy Indian Butter Chicken';\n      var recipeId = 1; // Parsing URL to find recipe details for fetch request if search parameters exist\n\n      if (!R.isEmpty(this.props.params.location.search)) {\n        var parsedQuery = queryString.parse(this.props.params.location.search);\n        recipeName = parsedQuery.recipe;\n        recipeId = parsedQuery.id;\n      }\n\n      ; // GET RECIPE META\n\n      fetch(\"https://api.foodwise.dev/master_recipes/\".concat(recipeName), {\n        method: 'GET',\n        mode: 'cors'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (recipe) {\n        return _this2.props.SetRecipePage(recipe);\n      }).catch(function (error) {\n        return _this2.setState({\n          error: error\n        });\n      }); // Should build out functionality where if the response array has a length of greater than 1, a different action is called to render the all-recipes page to show all the different results instead of routing to the recipe-page\n      // GET RECIPE INSTRUCTIONS INGREDIENTS\n\n      fetch(\"https://api.foodwise.dev/ingredients/\".concat(recipeId), {\n        method: 'GET',\n        mode: 'cors'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (ingredients) {\n        return _this2.props.SetRecipeIngredients(ingredients);\n      }).catch(function (error) {\n        return _this2.setState({\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"updateServings\",\n    value: function updateServings(event) {\n      this.setState({\n        servings: event.target.value\n      });\n    }\n  }, {\n    key: \"setRedirect\",\n    value: function setRedirect(persona) {\n      this.setState({\n        selectedPersona: persona.id,\n        redirect: true\n      });\n    }\n  }, {\n    key: \"handlePhoneNumberChange\",\n    value: function handlePhoneNumberChange(event) {\n      this.setState({\n        phoneNumber: event.target.value\n      });\n      console.log('5103236239', this.state.phoneNumber);\n    }\n  }, {\n    key: \"twilio\",\n    value: function twilio() {\n      var _this3 = this;\n\n      var _this$props$recipePag = this.props.recipePage.recipePage,\n          recipe_name = _this$props$recipePag.recipe_name,\n          id = _this$props$recipePag.id;\n      console.log('this.props.params.location.search', this.props.params.location.search);\n      fetch(\"https://api.foodwise.dev/twilio/messages\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          to: this.state.phoneNumber,\n          recipeName: recipe_name,\n          body: \"https://stanfield.space/recipe-page/\".concat(this.props.params.location.search)\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (something) {\n        return console.log(\"something\", something);\n      }).catch(function (error) {\n        return _this3.setState({\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"upvoteDownvote\",\n    value: function upvoteDownvote() {\n      var _this4 = this;\n\n      var recipeId;\n      var endpointToHit;\n\n      if (!R.isEmpty(this.props.params.location.search)) {\n        var parsedQuery = queryString.parse(this.props.params.location.search);\n        recipeId = parsedQuery.id;\n      }\n\n      ;\n\n      if (!this.state.favorited) {\n        this.setState({\n          favorited: true\n        });\n        endpointToHit = \"upvote\";\n      } else {\n        this.setState({\n          favorited: false\n        });\n        endpointToHit = \"downvote\";\n      }\n\n      fetch(\"https://api.foodwise.dev/\".concat(endpointToHit, \"/\").concat(recipeId), {\n        method: 'GET',\n        mode: 'cors'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (recipe) {\n        return _this4.props.SetUpvotes(recipe.upvotes);\n      }).catch(function (error) {\n        return _this4.setState({\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props$recipePag2 = this.props.recipePage.recipePage,\n          recipe_name = _this$props$recipePag2.recipe_name,\n          preptime = _this$props$recipePag2.preptime,\n          cooktime = _this$props$recipePag2.cooktime,\n          cost = _this$props$recipePag2.cost,\n          instructions = _this$props$recipePag2.instructions,\n          level = _this$props$recipePag2.level,\n          image_url = _this$props$recipePag2.image_url,\n          upvotes = _this$props$recipePag2.upvotes,\n          reheat = _this$props$recipePag2.reheat,\n          storage = _this$props$recipePag2.storage;\n      var ingredients = this.props.recipePage.ingredients;\n      return React.createElement(\"div\", {\n        id: \"recipecontainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"recipe-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, recipe_name)), React.createElement(\"div\", {\n        className: \"flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"hero-img\",\n        style: {\n          'background-image': \"url(\".concat(image_url, \")\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"meta-sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Meta\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Total: \", R.add(preptime, cooktime)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Prep: \", preptime), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Cook: \", cooktime), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Cost: \", cost), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Level: \", level), React.createElement(\"div\", {\n        className: \"flexbutton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"favorite\",\n        onClick: function onClick() {\n          return _this5.upvoteDownvote();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"\\u2665 Favorite (\", upvotes, \")\"), React.createElement(\"div\", {\n        className: \"divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Calendar\")))), React.createElement(\"div\", {\n        className: \"recipe ingredients\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Ingredients\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Makes \", React.createElement(\"input\", {\n        className: \"number-input\",\n        id: \"servings\",\n        type: \"number\",\n        value: this.state.servings,\n        onChange: function onChange(e) {\n          return _this5.updateServings(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), \" servings \"), R.map(this.renderRecipeIngredients, ingredients), React.createElement(\"div\", {\n        className: \"ingredients-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faPhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"phonetext\",\n        onChange: function onChange(e) {\n          return _this5.handlePhoneNumberChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this5.twilio();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"phonebutton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Send to phone\"))), React.createElement(\"div\", {\n        className: \"recipe instructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Instructions\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, R.addIndex(R.map)(renderRecipeInstructions, instructions)))));\n    }\n  }]);\n\n  return RecipePage;\n}(Component);\n\nfunction mapStatetoProps(state) {\n  return {\n    recipePage: state.recipePage\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    SetRecipePage: SetRecipePage,\n    SetRecipeIngredients: SetRecipeIngredients,\n    SetUpvotes: SetUpvotes\n  }, dispatch);\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(RecipePage);","map":{"version":3,"sources":["/Users/zakkary/Desktop/mealplanner/src/components/RecipePage.js"],"names":["React","Component","connect","bindActionCreators","R","SetRecipePage","SetRecipeIngredients","SetUpvotes","ReactGA","FontAwesomeIcon","faPhone","ReactMarkdown","require","queryString","initGA","console","log","initialize","logPageView","set","page","window","location","pathname","pageview","renderRecipeInstructions","instruction","index","renderRecipeIngredients","ingredientObj","ingredient","isNil","quantity","parseFloat","toString","measurement","technique","RecipePage","props","state","servings","phoneNumber","favorited","recipeName","recipeId","isEmpty","params","search","parsedQuery","parse","recipe","id","fetch","method","mode","then","response","json","catch","error","setState","ingredients","event","target","value","persona","selectedPersona","redirect","recipePage","recipe_name","headers","body","JSON","stringify","to","something","endpointToHit","upvotes","preptime","cooktime","cost","instructions","level","image_url","reheat","storage","add","upvoteDownvote","e","updateServings","map","handlePhoneNumberChange","twilio","addIndex","mapStatetoProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as R from 'ramda';\nimport { SetRecipePage, SetRecipeIngredients, SetUpvotes } from '../actions';\nimport ReactGA from 'react-ga';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhone } from '@fortawesome/free-solid-svg-icons';\nconst ReactMarkdown = require('react-markdown/with-html');\nconst queryString = require('query-string');\n\nexport const initGA = () => {\n    console.log('GA init');\n    ReactGA.initialize('UA-137386963-1');\n}\nexport const logPageView = () => {\n    ReactGA.set({ page: window.location.pathname })\n    ReactGA.pageview(window.location.pathname)\n}\n\nconst renderRecipeInstructions = (instruction, index) => (\n  <div>\n    <h4 className=\"steps\"> Step {index + 1}.</h4>\n    <p>{instruction}</p>\n  </div>\n)\n\nconst renderRecipeIngredients = (ingredientObj) => (\n  <div>\n    <input type=\"checkbox\" value={ingredientObj.ingredient} />\n    {/* Using parseFloat/toString combination to parse out trailing zeros\n    and using || '' as a null coalescing operator */}\n    {`${R.isNil(ingredientObj.quantity) ? '' : parseFloat(ingredientObj.quantity.toString())} ${ingredientObj.measurement} ${ingredientObj.technique || '' } ${ingredientObj.ingredient}`}\n  </div>\n)\n\nclass RecipePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      servings: 1,\n      phoneNumber:'',\n      favorited: false,\n    };\n  }\n\n  componentDidMount() {\n\n    // Setting a default recipe to load if the recipe-page is accessed directly\n    // Could use R.defaultTo\n    let recipeName = 'Easy Indian Butter Chicken';\n    let recipeId = 1;\n\n    // Parsing URL to find recipe details for fetch request if search parameters exist\n    if (!R.isEmpty(this.props.params.location.search)) {\n      let parsedQuery = queryString.parse(this.props.params.location.search);\n      recipeName = parsedQuery.recipe;\n      recipeId= parsedQuery.id;\n    };\n\n    // GET RECIPE META\n    fetch(\n      `https://api.foodwise.dev/master_recipes/${recipeName}`,\n      {\n        method: 'GET',\n        mode: 'cors',\n      },\n    ).then(response => response.json())\n    .then(recipe => this.props.SetRecipePage(recipe))\n    .catch(error => this.setState({ error }));\n\n    // Should build out functionality where if the response array has a length of greater than 1, a different action is called to render the all-recipes page to show all the different results instead of routing to the recipe-page\n\n    // GET RECIPE INSTRUCTIONS INGREDIENTS\n    fetch(\n      `https://api.foodwise.dev/ingredients/${recipeId}`,\n      {\n        method: 'GET',\n        mode: 'cors',\n      },\n    ).then(response => response.json())\n    .then(ingredients => this.props.SetRecipeIngredients(ingredients))\n    .catch(error => this.setState({ error }));\n\n  }\n\n  updateServings(event) {\n    this.setState({servings: event.target.value});\n  }\n\n  renderRecipeIngredients = (ingredientObj) => (\n    // TODO: Add functionality so the quantity takes into account the \"number of servings input\"\n    <div className=\"ingredientservings\">\n      <input type=\"checkbox\" value={ingredientObj.ingredient} /> \n      {/* Using parseFloat/toString combination to parse out trailing zeros\n      and using || '' as a null coalescing operator */}\n      {\n        `${R.isNil(ingredientObj.quantity) ? '' : parseFloat(this.state.servings * ingredientObj.quantity.toString())} ${ingredientObj.measurement} ${ingredientObj.technique || '' } ${ingredientObj.ingredient}`}\n    </div>\n  )\n  \n   \n  setRedirect(persona){\n    this.setState({ selectedPersona: persona.id, redirect: true });\n  }\n\n  handlePhoneNumberChange(event) {\n    this.setState({phoneNumber: event.target.value})\n    console.log('5103236239', this.state.phoneNumber);\n  }\n\n  twilio() {\n    const {recipe_name, id} = this.props.recipePage.recipePage;\n    console.log('this.props.params.location.search', this.props.params.location.search);\n    fetch(\n      `https://api.foodwise.dev/twilio/messages`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          to: this.state.phoneNumber,\n          recipeName: recipe_name,\n          body: `https://stanfield.space/recipe-page/${this.props.params.location.search}`,\n        })\n      }, \n    ).then(response => response.json())\n    .then(something => console.log(\"something\", something))\n    .catch(error => this.setState({ error }));\n  }\n\n  upvoteDownvote() {\n    let recipeId;\n    let endpointToHit;\n    if (!R.isEmpty(this.props.params.location.search)) {\n      let parsedQuery = queryString.parse(this.props.params.location.search);\n      recipeId= parsedQuery.id;\n    };\n    if (!this.state.favorited) {\n      this.setState({favorited: true});\n      endpointToHit = `upvote`\n    } else {\n      this.setState({favorited: false});\n      endpointToHit = `downvote`\n    }\n\n    fetch(\n      `https://api.foodwise.dev/${endpointToHit}/${recipeId}`,\n      {\n        method: 'GET',\n        mode: 'cors',\n      },\n    ).then(response => response.json())\n    .then(recipe => this.props.SetUpvotes(recipe.upvotes))\n    .catch(error => this.setState({ error }));\n} \n\n  render() {\n    const {recipe_name, preptime, cooktime, cost, instructions, level, image_url, upvotes, reheat, storage} = this.props.recipePage.recipePage;\n    const { ingredients } = this.props.recipePage;\n\n    return(\n      <div id=\"recipecontainer\">\n        <div className=\"recipe-header\">\n          <h1>{recipe_name}</h1>\n        </div>\n        <div className=\"flex\">\n          <div className=\"hero-img\" style={{ 'background-image': `url(${image_url})`}}>\n          </div>\n          <div className=\"meta-sidebar\">\n            <h2>Meta</h2>\n            <p>Total: {R.add(preptime,cooktime)}</p>\n            <p>Prep: {preptime}</p>\n            <p>Cook: {cooktime}</p>\n            \n            <p>Cost: {cost}</p>\n            <p>Level: {level}</p>\n\n            {/* This section only works if they link their Google Account */}\n\n            <div className=\"flexbutton\">\n            <div className=\"favorite\" onClick={()=>this.upvoteDownvote()}>♥ Favorite ({upvotes})</div>\n            <div className=\"divider\"></div>\n            <div className=\"calendar\">Calendar</div>\n\n          </div>\n        </div>\n        </div>\n        \n        <div className=\"recipe ingredients\">\n          <h2>Ingredients</h2>\n          <div>Makes <input className=\"number-input\" id=\"servings\" type=\"number\" value={this.state.servings} onChange={(e) => this.updateServings(e)} /> servings </div>\n          {R.map(this.renderRecipeIngredients, ingredients)}\n          <div className=\"ingredients-actions\">\n            <FontAwesomeIcon icon={faPhone} />\n            \n            <input type=\"text\" className=\"phonetext\" onChange={(e)=>this.handlePhoneNumberChange(e)} />\n            <div onClick={()=>this.twilio()}>\n              <button className=\"phonebutton\">Send to phone</button>\n            </div>\n          </div>\n\n          <div className=\"recipe instructions\">\n          <h2>Instructions</h2>\n          <form>\n            {R.addIndex(R.map)(renderRecipeInstructions, instructions)}\n          </form>\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStatetoProps(state) {\n  return {\n    recipePage: state.recipePage,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ SetRecipePage, SetRecipeIngredients, SetUpvotes }, dispatch);\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(RecipePage);\n"]},"metadata":{},"sourceType":"module"}