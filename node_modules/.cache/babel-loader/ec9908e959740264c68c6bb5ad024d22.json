{"ast":null,"code":"import _classCallCheck from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zakkary/Desktop/mealplanner/src/components/RecipePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as R from 'ramda';\nimport { SetRecipePage, SetRecipeIngredients } from '../actions';\nimport ReactGA from 'react-ga';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhone } from '@fortawesome/free-solid-svg-icons';\n\nvar ReactMarkdown = require('react-markdown/with-html');\n\nvar queryString = require('query-string');\n\nexport var initGA = function initGA() {\n  console.log('GA init');\n  ReactGA.initialize('UA-137386963-1');\n};\nexport var logPageView = function logPageView() {\n  ReactGA.set({\n    page: window.location.pathname\n  });\n  ReactGA.pageview(window.location.pathname);\n};\n\nvar renderRecipeInstructions = function renderRecipeInstructions(instruction, index) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Step \", index + 1, \".\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, instruction));\n};\n\nvar renderRecipeIngredients = function renderRecipeIngredients(ingredientObj) {\n  return (// TODO: Add functionality so the quantity takes into account the \"number of servings input\"\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: ingredientObj.ingredient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), \"\".concat(R.isNil(ingredientObj.quantity) ? '' : parseFloat(ingredientObj.quantity.toString()), \" \").concat(ingredientObj.measurement, \" \").concat(ingredientObj.technique || '', \" \").concat(ingredientObj.ingredient))\n  );\n}; // const renderRecipeTips = (recipeTip) => (\n//   <div>\n//     <h4>{recipeTip.name}:</h4>\n//     <ReactMarkdown\n//       source={recipeTip.tip}\n//       escapeHtml={false}\n//     />\n//   </div>\n// )\n\n\nvar RecipePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecipePage, _Component);\n\n  function RecipePage(props) {\n    var _this;\n\n    _classCallCheck(this, RecipePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecipePage).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(RecipePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Setting a default recipe to load if the recipe-page is accessed directly\n      // Could use R.defaultTo\n      var recipeName = 'Easy Indian Butter Chicken';\n      var recipeId = 1; // Parsing URL to find recipe details for fetch request if search parameters exist\n\n      if (!R.isEmpty(this.props.params.location.search)) {\n        var parsedQuery = queryString.parse(this.props.params.location.search);\n        recipeName = parsedQuery.recipe;\n        recipeId = parsedQuery.id;\n      }\n\n      ; // GET RECIPE META\n\n      fetch(\"https://api.foodwise.dev/master_recipes/\".concat(recipeName), {\n        method: 'GET',\n        mode: 'cors'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (recipe) {\n        return _this2.props.SetRecipePage(recipe);\n      }).catch(function (error) {\n        return _this2.setState({\n          error: error\n        });\n      }); // Should build out functionality where if the response array has a length of greater than 1, a different action is called to render the all-recipes page to show all the different results instead of routing to the recipe-page\n      // GET RECIPE INSTRUCTIONS INGREDIENTS\n\n      fetch(\"https://api.foodwise.dev/ingredients/\".concat(recipeId), {\n        method: 'GET',\n        mode: 'cors'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (ingredients) {\n        return _this2.props.SetRecipeIngredients(ingredients);\n      }).catch(function (error) {\n        return _this2.setState({\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$recipePag = this.props.recipePage.recipePage,\n          recipe_name = _this$props$recipePag.recipe_name,\n          preptime = _this$props$recipePag.preptime,\n          cooktime = _this$props$recipePag.cooktime,\n          cost = _this$props$recipePag.cost,\n          instructions = _this$props$recipePag.instructions,\n          level = _this$props$recipePag.level,\n          image_url = _this$props$recipePag.image_url,\n          reheat = _this$props$recipePag.reheat,\n          storage = _this$props$recipePag.storage;\n      var ingredients = this.props.recipePage.ingredients;\n      console.log(\"instructions\", instructions);\n      return React.createElement(\"div\", {\n        id: \"recipecontainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"recipe-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, recipe_name)), React.createElement(\"div\", {\n        className: \"flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"hero-img\",\n        style: {\n          'background-image': \"url(\".concat(image_url, \")\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"meta-sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Meta\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Total: \", R.add(preptime, cooktime)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Prep: \", preptime), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Cook: \", cooktime), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Cost: \", cost), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Level: \", level), React.createElement(\"div\", {\n        className: \"btn favorite\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"\\u2665 Favorite\"), React.createElement(\"div\", {\n        className: \"btn calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Calendar\"))), React.createElement(\"div\", {\n        className: \"recipe ingredients\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Ingredients\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Makes \", React.createElement(\"input\", {\n        className: \"number-input\",\n        id: \"servings\",\n        type: \"number\",\n        placeholder: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), \" servings \"), R.map(renderRecipeIngredients, ingredients), React.createElement(\"div\", {\n        className: \"ingredients-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faPhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: \"https://www.twilio.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Send ingredients list to phone\"))), React.createElement(\"div\", {\n        className: \"recipe instructions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Instructions\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, R.addIndex(R.map)(renderRecipeInstructions, instructions))));\n    }\n  }]);\n\n  return RecipePage;\n}(Component);\n\nfunction mapStatetoProps(state) {\n  return {\n    recipePage: state.recipePage\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    SetRecipePage: SetRecipePage,\n    SetRecipeIngredients: SetRecipeIngredients\n  }, dispatch);\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(RecipePage);","map":{"version":3,"sources":["/Users/zakkary/Desktop/mealplanner/src/components/RecipePage.js"],"names":["React","Component","connect","bindActionCreators","R","SetRecipePage","SetRecipeIngredients","ReactGA","FontAwesomeIcon","faPhone","ReactMarkdown","require","queryString","initGA","console","log","initialize","logPageView","set","page","window","location","pathname","pageview","renderRecipeInstructions","instruction","index","renderRecipeIngredients","ingredientObj","ingredient","isNil","quantity","parseFloat","toString","measurement","technique","RecipePage","props","state","recipeName","recipeId","isEmpty","params","search","parsedQuery","parse","recipe","id","fetch","method","mode","then","response","json","catch","error","setState","ingredients","recipePage","recipe_name","preptime","cooktime","cost","instructions","level","image_url","reheat","storage","add","map","addIndex","mapStatetoProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as R from 'ramda';\nimport { SetRecipePage, SetRecipeIngredients } from '../actions';\nimport ReactGA from 'react-ga';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhone } from '@fortawesome/free-solid-svg-icons';\nconst ReactMarkdown = require('react-markdown/with-html');\nconst queryString = require('query-string');\n \nexport const initGA = () => {\n    console.log('GA init');\n    ReactGA.initialize('UA-137386963-1');\n}\nexport const logPageView = () => {\n    ReactGA.set({ page: window.location.pathname })\n    ReactGA.pageview(window.location.pathname)\n}\n\nconst renderRecipeInstructions = (instruction, index) => (\n  <div>\n    <h4>Step {index + 1}.</h4>\n    <p>{instruction}</p>\n  </div>\n)\n\nconst renderRecipeIngredients = (ingredientObj) => (\n  // TODO: Add functionality so the quantity takes into account the \"number of servings input\"\n  <div>\n    <input type=\"checkbox\" value={ingredientObj.ingredient} /> \n    {/* Using parseFloat/toString combination to parse out trailing zeros\n    and using || '' as a null coalescing operator */}\n    {`${R.isNil(ingredientObj.quantity) ? '' : parseFloat(ingredientObj.quantity.toString())} ${ingredientObj.measurement} ${ingredientObj.technique || '' } ${ingredientObj.ingredient}`}\n  </div>\n)\n\n// const renderRecipeTips = (recipeTip) => (\n//   <div>\n//     <h4>{recipeTip.name}:</h4>\n//     <ReactMarkdown\n//       source={recipeTip.tip}\n//       escapeHtml={false}\n//     />\n//   </div>\n// )\n\nclass RecipePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n    \n    // Setting a default recipe to load if the recipe-page is accessed directly\n    // Could use R.defaultTo\n    let recipeName = 'Easy Indian Butter Chicken';\n    let recipeId = 1;\n\n    // Parsing URL to find recipe details for fetch request if search parameters exist\n    if (!R.isEmpty(this.props.params.location.search)) {\n      let parsedQuery = queryString.parse(this.props.params.location.search);\n      recipeName = parsedQuery.recipe;\n      recipeId= parsedQuery.id;\n    };\n\n    // GET RECIPE META\n    fetch(\n      `https://api.foodwise.dev/master_recipes/${recipeName}`,\n      {\n        method: 'GET',\n        mode: 'cors',\n      }, \n    ).then(response => response.json())\n    .then(recipe => this.props.SetRecipePage(recipe))\n    .catch(error => this.setState({ error }));\n\n    // Should build out functionality where if the response array has a length of greater than 1, a different action is called to render the all-recipes page to show all the different results instead of routing to the recipe-page\n    \n    // GET RECIPE INSTRUCTIONS INGREDIENTS\n    fetch(\n      `https://api.foodwise.dev/ingredients/${recipeId}`,\n      {\n        method: 'GET',\n        mode: 'cors',\n      }, \n    ).then(response => response.json())\n    .then(ingredients => this.props.SetRecipeIngredients(ingredients))\n    .catch(error => this.setState({ error }));\n\n  }\n\n  render() {\n    const {recipe_name, preptime, cooktime, cost, instructions, level, image_url, reheat, storage} = this.props.recipePage.recipePage;\n    const { ingredients } = this.props.recipePage;\n    console.log(\"instructions\", instructions);\n    return(\n      <div id=\"recipecontainer\">\n        <div className=\"recipe-header\">\n          <h1>{recipe_name}</h1>\n        </div>\n        <div className=\"flex\">\n          <div className=\"hero-img\" style={{ 'background-image': `url(${image_url})`}}>\n          </div>\n          <div className=\"meta-sidebar\">\n            <h2>Meta</h2>\n            <p>Total: {R.add(preptime,cooktime)}</p>\n            <p>Prep: {preptime}</p>\n            <p>Cook: {cooktime}</p>\n            \n            <p>Cost: {cost}</p>\n            <p>Level: {level}</p>\n\n            {/* This section only works if they link their Google Account */}\n            <div className=\"btn favorite\">♥ Favorite</div>\n            <div className=\"btn calendar\">Calendar</div>\n        </div>    \n        </div>\n\n        <div className=\"recipe ingredients\">\n          <h2>Ingredients</h2>\n          <div>Makes <input className=\"number-input\" id=\"servings\" type=\"number\" placeholder=\"1\" /> servings </div>\n          {R.map(renderRecipeIngredients, ingredients)}\n          <div className=\"ingredients-actions\">\n            <FontAwesomeIcon icon={faPhone} />\n            <a href=\"https://www.twilio.com\">Send ingredients list to phone</a>\n          </div>\n\n        </div>\n\n        <div className=\"recipe instructions\">\n          <h2>Instructions</h2>\n          <form>\n            {R.addIndex(R.map)(renderRecipeInstructions, instructions)}\n          </form>\n        </div>\n\n        {/* Don't think we want this section anymore... Very few tips for the recipes in the database */}\n        {/* <div className=\"recipe tips\">\n          <h2>Meal Prep Tips</h2>\n          {R.map(renderRecipeTips, reheat)}\n        </div> */}\n\n      </div>\n    )\n  }\n}\n\nfunction mapStatetoProps(state) {\n  return {\n    recipePage: state.recipePage,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ SetRecipePage, SetRecipeIngredients }, dispatch);\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(RecipePage);\n"]},"metadata":{},"sourceType":"module"}