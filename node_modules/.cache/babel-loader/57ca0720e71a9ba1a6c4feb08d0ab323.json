{"ast":null,"code":"import _classCallCheck from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zakkary/Desktop/mealplanner/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zakkary/Desktop/mealplanner/src/components/Survey.js\";\nimport React, { Component } from 'react';\nimport * as R from 'ramda';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport ReactGA from 'react-ga';\nexport var initGA = function initGA() {\n  console.log('GA init');\n  ReactGA.initialize('UA-137386963-1');\n};\nexport var logPageView = function logPageView() {\n  ReactGA.set({\n    page: window.location.pathname\n  });\n  ReactGA.pageview(window.location.pathname);\n};\n\nvar Survey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Survey, _Component);\n\n  function Survey(props) {\n    var _this;\n\n    _classCallCheck(this, Survey);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Survey).call(this, props));\n\n    _this.updateIndex = function () {\n      var newIndex = _this.state.index + 1;\n\n      _this.setState({\n        index: newIndex\n      });\n    };\n\n    _this.renderSurveyQuestion = function (question) {\n      return React.createElement(\"div\", {\n        className: \"questionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, _this.state.index + 1, \"/ \", question.q), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, question.desc), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"\",\n        className: \"survey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), _this.state.index + 1 === _this.state.questions.length ? React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this.setState({\n            isComplete: true\n          });\n        },\n        className: \"btn fit-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Submit!\") : React.createElement(\"div\", {\n        onClick: _this.updateIndex,\n        className: \"btn fit-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Next question\"));\n    };\n\n    _this.state = {\n      questions: [{\n        q: 'How many meals do you need to prep every week?',\n        desc: 'Estimate how many breakfasts, lunches, and dinners that you currently or would like to replace with prepped food.'\n      }, {\n        q: 'How much money would you like to spend on a meal?',\n        desc: 'Estimate from your current cooking expenses or enter a price point you want to aim for.'\n      }, {\n        q: 'How much time do you spend cooking a meal?',\n        desc: 'Estimate how long a simple dinner takes to cook, or how much time you have available for cooking a meal in minutes.'\n      }, {\n        q: 'What cuisines do you prefer?',\n        desc: 'Choose as many options as you like.'\n      }, {\n        q: 'Do you have any dietary preferences?',\n        desc: 'Select as many as applicable.'\n      }],\n      index: 0,\n      isComplete: false\n    };\n    return _this;\n  }\n\n  _createClass(Survey, [{\n    key: \"render\",\n    value: function render() {\n      var isComplete = this.state.isComplete;\n\n      if (isComplete) {\n        return React.createElement(Redirect, {\n          exact: true,\n          to: \"/surprise-customize\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"survey-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"surveytitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Please fill out this survey as best you can\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"We will recommend a recipe based on the preferences you enter\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), this.renderSurveyQuestion(this.state.questions[this.state.index]));\n    }\n  }]);\n\n  return Survey;\n}(Component);\n\nexport default Survey;","map":{"version":3,"sources":["/Users/zakkary/Desktop/mealplanner/src/components/Survey.js"],"names":["React","Component","R","FontAwesomeIcon","Route","Switch","Redirect","ReactGA","initGA","console","log","initialize","logPageView","set","page","window","location","pathname","pageview","Survey","props","updateIndex","newIndex","state","index","setState","renderSurveyQuestion","question","q","desc","questions","length","isComplete"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as R from 'ramda';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport ReactGA from 'react-ga';\nexport const initGA = () => {\n    console.log('GA init');\n    ReactGA.initialize('UA-137386963-1');\n}\nexport const logPageView = () => {\n    ReactGA.set({ page: window.location.pathname })\n    ReactGA.pageview(window.location.pathname)\n}\n\nclass Survey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [\n        {\n          q: 'How many meals do you need to prep every week?',\n          desc: 'Estimate how many breakfasts, lunches, and dinners that you currently or would like to replace with prepped food.'\n        },\n        {\n          q: 'How much money would you like to spend on a meal?',\n          desc: 'Estimate from your current cooking expenses or enter a price point you want to aim for.'\n        },\n        {\n          q: 'How much time do you spend cooking a meal?',\n          desc: 'Estimate how long a simple dinner takes to cook, or how much time you have available for cooking a meal in minutes.'\n        },\n        {\n          q: 'What cuisines do you prefer?',\n          desc: 'Choose as many options as you like.'\n        },\n        {\n          q: 'Do you have any dietary preferences?',\n          desc: 'Select as many as applicable.'\n        },\n      ],\n      index: 0,\n      isComplete: false,\n    };\n  }\n\n  updateIndex = () => {\n    const newIndex = this.state.index + 1;\n    this.setState(\n      { index: newIndex }\n    )\n  }\n\n  renderSurveyQuestion = (question) => (\n    <div className=\"questionBox\">\n      <h3>{this.state.index + 1}/ {question.q}</h3>\n        <p>{question.desc}</p>\n        <form>\n          <input type=\"text\" name=\"\" className=\"survey-text\"></input>\n        </form>\n        {\n          (this.state.index + 1) === this.state.questions.length ?\n          (<div onClick={() => this.setState({ isComplete: true })} className=\"btn fit-content\">Submit!</div>) :\n          (<div onClick={ this.updateIndex } className=\"btn fit-content\">Next question</div>)\n        }\n\n    </div>\n  )\n\n  render() {\n    const { isComplete } = this.state;\n\n    if (isComplete) {\n      return (\n        <Redirect exact to=\"/surprise-customize\" />\n      )\n    }\n\n    return(\n      <div className=\"survey-header\">\n        <h1 className=\"surveytitle\">Please fill out this survey as best you can</h1>\n        <h2>We will recommend a recipe based on the preferences you enter</h2>\n        <br/>\n        <br/>\n        { this.renderSurveyQuestion(this.state.questions[this.state.index]) }\n      </div>\n    )\n  }\n}\n\nexport default Survey;\n"]},"metadata":{},"sourceType":"module"}